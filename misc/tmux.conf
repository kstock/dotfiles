# Modeline and Notes {
# vim: set foldmarker={,} foldlevel=1 foldmethod=marker:
# }
# https://wiki.archlinux.org/index.php/Tmux
#
# basic setup {

unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

## start numbering at 1 for easier switch
set -g base-index 1
set-window-option -g pane-base-index 1


set -g default-command /bin/zsh

setw -g monitor-activity on
# turns off bell!
set -g visual-activity on

## increase scrollback buffer size
set -g history-limit 900000

## tmux messages are displayed for 4 seconds
#If set to 0, messages and indicators are displayed until a key is pressed.
set -g display-time 4000

# Turn on window titles
#Attempt to set the client terminal title using the tsl (to status line) and fsl (from status line)
# terminfo(5) entries if they exist
#sets these to the \e]0;...\007 sequence if the terminal appears to be xterm(1).  This option is off by default.
set -g set-titles on

# TODO tmux show-options -w automatic-rename
# says this is off, why? appears to be working though...????
# Set window title string
#  #H  Hostname of local host
#  #I  Current window index
#  #P  Current pane index
#  #S  Session name
#  #T  Current window title
#  #W  Current window name
#  #   A literal ‘#’
set -g set-titles-string '#S:#I.#P #W #{pane_current_command}'
# Automatically set window title
setw -g automatic-rename

# this is only noticable when using esc to exit insert mode
# since I usally use jj I never notice this
# leaving in case I need it someday
## address vim mode switching delay (http://superuser.com/a/252717/65504)
#set -s escape-time 0

# end basic setup }

# keybindings {

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# -r allows it to be repeated, prefix JJJLLHH etc to resize
# repeat-time controls the timeout
# https://unix.stackexchange.com/questions/463169/beter-pane-resizing-mapping-for-tmux
bind-key -r H resize-pane -L 10
bind-key -r J resize-pane -D 10
bind-key -r K resize-pane -U 10
bind-key -r L resize-pane -R 10
##v(ertical) is vi-like, but s(plit) and h(orizontal) are already taked so using m(iddle)...
#
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

bind-key v split-window -p 20 -c "#{pane_current_path}"
bind-key V split-window -p 20 -c "#{pane_current_path}" '\;' swap-pane -U

bind-key - split-window -v  -c "#{pane_current_path}"
bind-key _ split-window -v  -c "#{pane_current_path}" '\;' swap-pane -U

bind-key m split-window -h -c "#{pane_current_path}"
bind-key M split-window -h   -c "#{pane_current_path}" '\;' swap-pane -U
bind-key | split-window -h  -c "#{pane_current_path}"

## force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf\; refresh-client -S
## quick pane cycling
unbind ^A
bind ^A select-pane -t :.+
##overwrote p(revious) so doing this
bind-key N previous-window
bind-key n next-window
#
#
bind-key -r "<" swap-window -d -t -1
bind-key -r ">" swap-window -d -t +1

bind-key [ swap-pane -d -U
bind-key ] swap-pane -d -D

bind-key M choose-tree -w "join-pane -t '%%'"
bind-key C-m choose-tree -s "join-pane -t '%%'"


# default ? is list-keys -N
# for -N only keys in the root and prefix key tables are listed by default
unbind-key ?
bind-key ? list-keys

# end keybindings }

# statusline {

set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
set -g status-interval 5
#
set -g status-right "#[fg=red]%m/%d|%T"
# https://github.com/tmux/tmux/wiki/FAQ#how-do-i-translate--fg--bg-and--attr-options-into--style-options
#set-window-option -g window-status-current-bg red
setw -g window-status-current-style fg=white,bg=red,bright
#
#set -g status-fg white
## Highlight active window
# end statusline }
# plugins {

#set -g @tpm_plugins "              \
  #tmux-plugins/tpm                 \
  #tmux-plugins/tmux-yank       \
  #tmux-plugins/tmux-open    \
  #tmux-plugins/tmux-logging    \
  #tmux-plugins/tmux-sidebar \
  #thalesmello/tmux-copycat \
#"
  # 2019-01-05 see issue resolved on Nov 21, 2017
  # replaced with thalesmello fork due to 2.4 breaking changes https://github.com/tmux-plugins/tmux-copycat/issues/109
  #tmux-plugins/tmux-copycat    \ " disabled


## initializes TMUX plugin manager
# TODO disabled was err 127 bc https://github.com/tmux-plugins/tpm/issues/67
##run-shell ~/.tmux/plugins/tpm/tpm

set -g @plugin 'tmux-plugins/tpm'


# <C-o> to open highlighted in editor
set -g @plugin  'tmux-plugins/tmux-open'

# prefix-{f,g} to copy mode highlight predefined searches for filenames
set -g @plugin  'tmux-plugins/tmux-copycat'

#prefix + g - prompts for session name and switches to it. Performs 'kind-of' name completion.
#Faster than the built-in prefix + s prompt for long session lists.
#prefix + C (shift + c) - prompt for creating a new session by name.
#prefix + X (shift + x) - kill current session without detaching tmux.
#prefix + S (shift + s) - switches to the last session.
#The same as built-in prefix + L that everyone seems to override with some other binding.
#prefix + @ - promote current pane into a new session.
#Analogous to how prefix + ! breaks current pane to a new window.
#prefix + t<secondary-key> - join currently marked pane (prefix + m) to current session/window, and switch to it
#secondary-keys
#h, -, ": join horizontally
#v, |, %: join vertically
#f, @: join full screen
set -g @plugin  'tmux-plugins/tmux-sessionist'

# y to yank
# prefix-y to copy current line in terminal
# prefix-Y to copy current pwd
set -g @plugin  'tmux-plugins/tmux-yank'
# this is needed otherwise my own drage to copy is destroyed
set -g @yank_with_mouse off # or 'on'

set -g @plugin  'tmux-plugins/tmux-logging'

set -g @logging-path '#{pane_current_path}'
set -g @screen-capture-path '#{pane_current_path}'
set -g @save-complete-history-path '#{pane_current_path}'
set -g @logging_key="P"
# this is default but want here in case i want to change it
# these vars are in the plugins variables.sh file but not documented
# these do not work, i'd prefer them as cli command anyway
#default_pane_screen_capture_key="M-p" # Alt-p
#set -g @screen-capture-key
#default_save_complete_history_key="M-P" # Alt-Shift-p
#"@save-complete-history-key"
#default_clear_history_key="M-c" # Alt-c
#"@clear-history-key"


    #set -g @plugin 'hallazzang/tmux-reset'
#set -g @yank_selection 'primary' # or 'secondary' or 'clipboard'
#set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"
#run-shell ~/.tmux/plugins/tpm/tpm

run -b ~/.tmux/plugins/tpm/tpm

# end plugins }

# mouse {

#  mouse mode changed in 2.1
set-option -g -q mouse on
#set -g mode-mouse on
#setw -g mouse-select-window on
#setw -g mouse-select-pane on

# end mouse }

# copy paste {

##make copy vim-like
# changed in 2.5!
unbind [
bind Escape copy-mode
unbind p
#bind p paste-buffer
bind-key p run "xsel -o -b | tmux load-buffer - ; tmux paste-buffer"

setw -g mode-keys vi
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
# https://unix.stackexchange.com/questions/348913/copy-selection-to-a-clipboard-in-tmux
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# TODO macos needed?
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard "
# end copy paste }

