--recurse=yes
--tag-relative=yes

--map-TypeScript=+.tsx 

--langdef=vimwiki
--langmap=vimwiki:.page

--regex-vimwiki=/(^|[^\@])\@([^@]+)([ \t]|$)/\2/f,function/
--regex-vimwiki=/[^\@]\@\@([^@]+)([ \t]|$)/. \1/f,function/
--regex-vimwiki=/[^\@]\@\@\@([^@]+)([ \t]|$)/.. \1/f,function/
--regex-vimwiki=/[^\@]\@\@\@\@([^@]+)([ \t]|$)/...  \1/f,function/
--regex-vimwiki=/[^\@]\@\@\@\@\@([^@]+)([ \t]|$)/....  \1/f,function/
--regex-vimwiki=/[^\@]\@\@\@\@\@\@([^@]+)([ \t]|$)/.....  \1/f,function/


--exclude=.git
--exclude=.hg
--exclude=.svn

--exclude=*bundle.*
--exclude=.node_modules/*
--exclude=node_modules/*
--exclude=node_modules
--exclude=node_modules/*
--exclude=.venv/*
--exclude=package-lock.json
--exclude=package.json

--exclude=.tmp
--exclude=\*.Master
--exclude=\*.bak
--exclude=\*.cache
--exclude=\*.class
--exclude=\*.csproj
--exclude=\*.csproj.user
--exclude=\*.dll
--exclude=\*.map
--exclude=\*.min.\*
--exclude=\*.pdb
--exclude=\*.pyc
--exclude=\*.sln
--exclude=\*.swp
--exclude=\*.tar.\*
--exclude=bower_components
--exclude=build
--exclude=components/*
--exclude=cscope.\*
--exclude=db/*
--exclude=dist
--exclude=log/*
--exclude=min
--exclude=tags
--exclude=test
--exclude=tests
--exclude=vendor
--exclude=vendor/*
--exclude=Session.vim

--sort=no

# https://docs.ctags.io/en/latest/man/ctags-optlib.7.html#ctags-optlib-7
--kinddef-vim=s,section,marker sections
--regex-vim=/^" (.*)\{$/\1/s,section/{scope=push}
--regex-vim=/^" (.*)\}$///{scope=pop}{placeholder}

# s taken by 'script files'
--langdef=zsh
--langmap=zsh:.zsh
--kinddef-zsh=p,part,marker sections
--regex-zsh=/^# (.*)\{$/\1/p,part/{scope=push}
--regex-zsh=/^# (.*)\}$///{scope=pop}{placeholder}

#--langdef=Clojure
#--langmap=Clojure:.clj
#--regex-clojure=/\([ \t]*create-ns[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/n,namespace/
#--regex-clojure=/\([ \t]*def[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/d,definition/
#--regex-clojure=/\([ \t]*defn-?[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/f,function/
#--regex-clojure=/\([ \t]*defmacro[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/m,macro/
#--regex-clojure=/\([ \t]*definline[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/i,inline/
#--regex-clojure=/\([ \t]*defmulti[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/a,multimethod definition/
#--regex-clojure=/\([ \t]*defmethod[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/b,multimethod instance/
#--regex-clojure=/\([ \t]*defonce[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/c,definition (once)/
#--regex-clojure=/\([ \t]*defstruct[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/s,struct/
#--regex-clojure=/\([ \t]*intern[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/v,intern/
#--regex-clojure=/\([ \t]*ns[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/n,namespace/
#
#--langdef=scala
#--langmap=scala:.scala
#--regex-scala=/^[ \t]*((abstract|final|sealed|implicit|lazy)[ \t]*)*(private|protected)?[ \t]*class[ \t]+([a-zA-Z0-9_]+)/\4/c,classes/
#--regex-scala=/^[ \t]*((abstract|final|sealed|implicit|lazy)[ \t]*)*(private|protected)?[ \t]*object[ \t]+([a-zA-Z0-9_]+)/\4/c,objects/
#--regex-scala=/^[ \t]*((abstract|final|sealed|implicit|lazy)[ \t]*)*(private|protected)?[ \t]*case class[ \t]+([a-zA-Z0-9_]+)/\4/c,case classes/
#--regex-scala=/^[ \t]*((abstract|final|sealed|implicit|lazy)[ \t]*)*(private|protected)?[ \t]*case object[ \t]+([a-zA-Z0-9_]+)/\4/c,case objects/
#--regex-scala=/^[ \t]*((abstract|final|sealed|implicit|lazy)[ \t]*)*(private|protected)?[ \t]*trait[ \t]+([a-zA-Z0-9_]+)/\4/t,traits/
#--regex-scala=/^[ \t]*type[ \t]+([a-zA-Z0-9_]+)/\1/T,types/
#--regex-scala=/^[ \t]*((abstract|final|sealed|implicit|lazy)[ \t]*)*def[ \t]+([a-zA-Z0-9_]+)/\3/m,methods/
#--regex-scala=/^[ \t]*((abstract|final|sealed|implicit|lazy)[ \t]*)*val[ \t]+([a-zA-Z0-9_]+)/\3/l,constants/
#--regex-scala=/^[ \t]*((abstract|final|sealed|implicit|lazy)[ \t]*)*var[ \t]+([a-zA-Z0-9_]+)/\3/l,variables/
#--regex-scala=/^[ \t]*package[ \t]+([a-zA-Z0-9_.]+)/\1/p,packages/

#--regex-html=/id="([A-Za-z0-9_-]+)"/\1/i,id,ids/
#--regex-html=/class="([A-Za-z0-9_-]+)"/\1/c,class,classes/
#--regex-html=/&lt;img[ \t]+src[ \t]*=[ \t]*\&quot;([^\&quot;]+)/\1/Images/i
#--regex-html=/<h1[^>]*>(.*)<\/h1>/\1/h,header/
#--regex-html=/<h2[^>]*>(.*)<\/h2>/. \1/h,header/
#--regex-html=/<h3[^>]*>(.*)<\/h3>/.   \1/h,header/
#
#--regex-html=/[ \t]+ng-controller[ \t]*=[ \t]*['"]([^'"]+)/\1/o,object/
#--regex-html=/[ \t]+ng-click[ \t]*=[ \t]*['"]([^'"]+)/\1/o,object/

